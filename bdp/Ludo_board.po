THEORY ProofList IS
_f(1) & _f(2) & _f(13) & _f(14) & WellDefinedness_getPos.2,(_f(72) & _f(73) & _f(70) => _f(75));
_f(1) & _f(2) & _f(13) & _f(14) & WellDefinedness_getPos.1,(_f(71) & _f(70) => _f(74));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(25) & _f(3) & _f(26) & WellDefinedness_setExternalPos.2,(_f(4) & _f(70) => _f(66));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(25) & _f(3) & _f(26) & WellDefinedness_setExternalPos.1,(_f(4) & _f(70) => _f(65));
_f(1) & _f(2) & _f(13) & WellDefinednessPrecondition_setExternalPos.1,(_f(14) & _f(24) & _f(25) & _f(3) & _f(64) => _f(62));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & _f(16) & WellDefinedness_setFree.4,(_f(70) => _f(68));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & _f(16) & WellDefinedness_setFree.3,(_f(70) => _f(67));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & _f(16) & WellDefinedness_setFree.2,(_f(70) => _f(66));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & _f(16) & WellDefinedness_setFree.1,(_f(70) => _f(65));
_f(1) & _f(2) & _f(13) & WellDefinednessPrecondition_setFree.5,(_f(14) & _f(15) & _f(64) => _f(69));
_f(1) & _f(2) & _f(13) & WellDefinednessPrecondition_setFree.4,(_f(14) & _f(15) & _f(64) => _f(68));
_f(1) & _f(2) & _f(13) & WellDefinednessPrecondition_setFree.3,(_f(14) & _f(15) & _f(64) => _f(67));
_f(1) & _f(2) & _f(13) & WellDefinednessPrecondition_setFree.2,(_f(14) & _f(15) & _f(64) => _f(66));
_f(1) & _f(2) & _f(13) & WellDefinednessPrecondition_setFree.1,(_f(14) & _f(15) & _f(64) => _f(65));
_f(1) & _f(2) & WellDefinednessInvariant.2,(_f(53) & _f(54) & _f(55) & _f(56) & _f(57) & _f(58) & _f(59) & _f(3) & _f(60) & _f(4) & _f(61) => _f(63));
_f(1) & _f(2) & WellDefinednessInvariant.1,(_f(53) & _f(54) & _f(55) & _f(56) & _f(57) & _f(58) & _f(59) & _f(3) & _f(61) => _f(62));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(44) & Operation_setInternalPos.8,(_f(28) & _f(29) & _f(5) => _f(52));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(44) & Operation_setInternalPos.7,(_f(28) & _f(5) => _f(51));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(44) & Operation_setInternalPos.6,(_f(5) => _f(50));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(44) & Operation_setInternalPos.5,(_f(5) => _f(49));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(44) & Operation_setInternalPos.4,(_f(5) => _f(48));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(44) & Operation_setInternalPos.3,(_f(5) => _f(47));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(44) & Operation_setInternalPos.2,(_f(5) => _f(46));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(44) & Operation_setInternalPos.1,(_f(5) => _f(45));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(25) & _f(3) & _f(26) & Operation_setExternalPos.13,(_f(30) & _f(28) & _f(29) & _f(5) => _f(43));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(25) & _f(3) & _f(26) & Operation_setExternalPos.12,(_f(30) & _f(28) & _f(5) => _f(42));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(25) & _f(3) & _f(26) & Operation_setExternalPos.11,(_f(30) & _f(5) => _f(41));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(25) & _f(3) & _f(26) & Operation_setExternalPos.10,(_f(30) & _f(5) => _f(40));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(25) & _f(3) & _f(26) & Operation_setExternalPos.9,(_f(30) & _f(5) => _f(39));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(25) & _f(3) & _f(26) & Operation_setExternalPos.8,(_f(30) & _f(5) => _f(38));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(25) & _f(3) & _f(26) & Operation_setExternalPos.7,(_f(4) & _f(27) & _f(28) & _f(29) & _f(5) => _f(37));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(25) & _f(3) & _f(26) & Operation_setExternalPos.6,(_f(4) & _f(27) & _f(28) & _f(5) => _f(36));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(25) & _f(3) & _f(26) & Operation_setExternalPos.5,(_f(4) & _f(27) & _f(5) => _f(35));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(25) & _f(3) & _f(26) & Operation_setExternalPos.4,(_f(4) & _f(27) & _f(5) => _f(34));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(25) & _f(3) & _f(26) & Operation_setExternalPos.3,(_f(4) & _f(27) & _f(5) => _f(33));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(25) & _f(3) & _f(26) & Operation_setExternalPos.2,(_f(4) & _f(27) & _f(5) => _f(32));
_f(1) & _f(2) & _f(13) & _f(14) & _f(24) & _f(25) & _f(3) & _f(26) & Operation_setExternalPos.1,(_f(4) & _f(27) & _f(5) => _f(31));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & _f(16) & Operation_setFree.7,(_f(3) & _f(4) & _f(5) => _f(23));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & _f(16) & Operation_setFree.6,(_f(3) & _f(5) => _f(22));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & _f(16) & Operation_setFree.5,(_f(5) => _f(21));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & _f(16) & Operation_setFree.4,(_f(5) => _f(20));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & _f(16) & Operation_setFree.3,(_f(5) => _f(19));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & _f(16) & Operation_setFree.2,(_f(5) => _f(18));
_f(1) & _f(2) & _f(13) & _f(14) & _f(15) & _f(16) & Operation_setFree.1,(_f(5) => _f(17));
_f(1) & _f(2) & _f(13) & Operation_clear.7,(_f(3) & _f(4) & _f(5) => _f(12));
_f(1) & _f(2) & _f(13) & Operation_clear.6,(_f(3) & _f(5) => _f(11));
_f(1) & _f(2) & _f(13) & Operation_clear.5,(_f(5) => _f(10));
_f(1) & _f(2) & _f(13) & Operation_clear.4,(_f(5) => _f(9));
_f(1) & _f(2) & _f(13) & Operation_clear.3,(_f(5) => _f(8));
_f(1) & _f(2) & _f(13) & Operation_clear.2,(_f(5) => _f(7));
_f(1) & _f(2) & _f(13) & Operation_clear.1,(_f(5) => _f(6));
_f(1) & _f(2) & Initialisation.7,(_f(3) & _f(4) & _f(5) => _f(12));
_f(1) & _f(2) & Initialisation.6,(_f(3) & _f(5) => _f(11));
_f(1) & _f(2) & Initialisation.5,(_f(5) => _f(10));
_f(1) & _f(2) & Initialisation.4,(_f(5) => _f(9));
_f(1) & _f(2) & Initialisation.3,(_f(5) => _f(8));
_f(1) & _f(2) & Initialisation.2,(_f(5) => _f(7));
_f(1) & _f(2) & Initialisation.1,(_f(5) => _f(6))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
COLORS: FIN(INTEGER) & not(COLORS = {}) & PIECES: FIN(INTEGER) & not(PIECES = {}) & ((numPiecesByColor) = (4)) & ((numExternal) = (52)) & ((numInternal) = (6)) & ((numColors) = (4)) & ((card(COLORS)) = (numColors)) & ((numPieces) : (NAT)) & ((numPieces) = ((numPiecesByColor * numColors))) & ((diceOptions) = (((1) .. (6)))) & stars : POW( ((0) .. ((numExternal - 1)))) & ((stars) = (({8}\/{21}\/{34}\/{47}))) & startPoint : COLORS +-> ((0) .. (51)) & startPoint : COLORS --> ((0) .. (51)) & startPoint~ : ((0) .. (51)) +-> COLORS & ((startPoint) : (((COLORS) >-> (((0) .. (51)))))) & ((card(PIECES)) = ((numPiecesByColor * numColors))) & colorsOrder : ((0) .. (3)) +-> COLORS & colorsOrder : ((0) .. (3)) >+> COLORS & colorsOrder : ((0) .. (3)) +->> COLORS & colorsOrder : ((0) .. (3)) --> COLORS & dom(colorsOrder) = ((0) .. (3)) & colorsOrder~ : COLORS +-> ((0) .. (3)) & ran(colorsOrder) = COLORS & ((colorsOrder) : (((((0) .. (3))) >->> (COLORS)))) & colorOf : PIECES +-> COLORS & colorOf : PIECES --> COLORS & colorOf : PIECES +->> COLORS & dom(colorOf) = PIECES & ran(colorOf) = COLORS & ((colorOf) : (((PIECES) -->> (COLORS)))) & !(cc).(((((cc) : (COLORS))) => (((((colorOf)~ )[({cc})]) : (FIN(PIECES))) & ((card(((colorOf)~ )[({cc})])) = (numPiecesByColor))))) & piecesOrder : ((0) .. (15)) +-> PIECES & piecesOrder : ((0) .. (15)) >+> PIECES & piecesOrder : ((0) .. (15)) +->> PIECES & piecesOrder : ((0) .. (15)) --> PIECES & dom(piecesOrder) = ((0) .. (15)) & piecesOrder~ : PIECES +-> ((0) .. (15)) & ran(piecesOrder) = PIECES & ((piecesOrder) : (((((0) .. (15))) >->> (PIECES))));
((nn) : (((0) .. ((numExternal - 1)))));
not(((nn) : (((stars) \/ (ran(startPoint))))));
"Invariant is preserved";
(({}) : (((PIECES) +-> (((0) .. ((numExternal - 1)))))));
(({}) : (((PIECES) +-> (((0) .. ((numInternal - 1)))))));
((((dom({})) /\ (dom({})))) = ({}));
((((dom({})) /\ (PIECES))) = ({}));
((((((dom({})) \/ (dom({})))) \/ (PIECES))) = (PIECES));
(card((({}) |> (({nn})))) <= 2);
(card((((({})~) ; (colorOf)) )[({nn})]) <= 1);
((lockedPieces) : (POW(PIECES))) & ((externalPos) : (((PIECES) +-> (((0) .. ((numExternal - 1))))))) & ((internalPos) : (((PIECES) +-> (((0) .. ((numInternal - 1))))))) & ((((dom(externalPos)) /\ (dom(internalPos)))) = ({})) & ((((dom(externalPos)) /\ (lockedPieces))) = ({})) & ((((dom(internalPos)) /\ (lockedPieces))) = ({})) & ((((((dom(externalPos)) \/ (dom(internalPos)))) \/ (lockedPieces))) = (PIECES)) & !(nn).(((((nn) : (((0) .. ((numExternal - 1)))))) => ((card(((externalPos) |> (({nn})))) <= 2) & ((not(((nn) : (((stars) \/ (ran(startPoint))))))) => ((card(((((externalPos)~) ; (colorOf)) )[({nn})]) <= 1))))));
((pp) : (PIECES));
((pp) : (lockedPieces));
(card(((externalPos) |> (({(startPoint )((colorOf )(pp))})))) +1 <= 2);
((((externalPos) <+ (({((pp) |-> ((startPoint )((colorOf )(pp))))})))) : (((PIECES) +-> (((0) .. ((numExternal - 1)))))));
((((dom(((externalPos) <+ (({((pp) |-> ((startPoint )((colorOf )(pp))))}))))) /\ (dom(internalPos)))) = ({}));
((((dom(((externalPos) <+ (({((pp) |-> ((startPoint )((colorOf )(pp))))}))))) /\ ((lockedPieces - ({pp}))))) = ({}));
((((dom(internalPos)) /\ ((lockedPieces - ({pp}))))) = ({}));
((((((dom(((externalPos) <+ (({((pp) |-> ((startPoint )((colorOf )(pp))))}))))) \/ (dom(internalPos)))) \/ ((lockedPieces - ({pp}))))) = (PIECES));
(card(((((externalPos) <+ (({((pp) |-> ((startPoint )((colorOf )(pp))))})))) |> (({nn})))) <= 2);
(card(((((((externalPos) <+ (({((pp) |-> ((startPoint )((colorOf )(pp))))}))))~) ; (colorOf)) )[({nn})]) <= 1);
not(((pp) : (lockedPieces)));
not(((pp) : (dom(internalPos))));
(card(((externalPos) |> (({nn})))) +1 <= 2);
not((((((((externalPos)~) ; (colorOf)) )[({nn})] - ({(colorOf )(pp)}))) = ({})));
((nn$1) : (((0) .. ((numExternal - 1)))));
not(((nn$1) : (((stars) \/ (ran(startPoint))))));
not(not(((nn) : (((stars) \/ (ran(startPoint)))))) & not((((((((externalPos)~) ; (colorOf)) )[({nn})] - ({(colorOf )(pp)}))) = ({}))));
((((((externalPos) |>> (({nn})))) <+ (({((pp) |-> (nn))})))) : (((PIECES) +-> (((0) .. ((numExternal - 1)))))));
((((dom(((((externalPos) |>> (({nn})))) <+ (({((pp) |-> (nn))}))))) /\ (dom(internalPos)))) = ({}));
((((dom(((((externalPos) |>> (({nn})))) <+ (({((pp) |-> (nn))}))))) /\ (((lockedPieces) \/ (((externalPos)~ )[({nn})]))))) = ({}));
((((dom(internalPos)) /\ (((lockedPieces) \/ (((externalPos)~ )[({nn})]))))) = ({}));
((((((dom(((((externalPos) |>> (({nn})))) <+ (({((pp) |-> (nn))}))))) \/ (dom(internalPos)))) \/ (((lockedPieces) \/ (((externalPos)~ )[({nn})]))))) = (PIECES));
(card(((((((externalPos) |>> (({nn})))) <+ (({((pp) |-> (nn))})))) |> (({nn$1})))) <= 2);
(card(((((((((externalPos) |>> (({nn})))) <+ (({((pp) |-> (nn))}))))~) ; (colorOf)) )[({nn$1})]) <= 1);
((((externalPos) <+ (({((pp) |-> (nn))})))) : (((PIECES) +-> (((0) .. ((numExternal - 1)))))));
((((dom(((externalPos) <+ (({((pp) |-> (nn))}))))) /\ (dom(internalPos)))) = ({}));
((((dom(((externalPos) <+ (({((pp) |-> (nn))}))))) /\ (lockedPieces))) = ({}));
((((((dom(((externalPos) <+ (({((pp) |-> (nn))}))))) \/ (dom(internalPos)))) \/ (lockedPieces))) = (PIECES));
(card(((((externalPos) <+ (({((pp) |-> (nn))})))) |> (({nn$1})))) <= 2);
(card(((((((externalPos) <+ (({((pp) |-> (nn))}))))~) ; (colorOf)) )[({nn$1})]) <= 1);
((nn) : (((0) .. ((numInternal - 1)))));
((((({pp})) <<| (externalPos))) : (((PIECES) +-> (((0) .. ((numExternal - 1)))))));
((((internalPos) <+ (({((pp) |-> (nn))})))) : (((PIECES) +-> (((0) .. ((numInternal - 1)))))));
((((dom(((({pp})) <<| (externalPos)))) /\ (dom(((internalPos) <+ (({((pp) |-> (nn))}))))))) = ({}));
((((dom(((({pp})) <<| (externalPos)))) /\ (lockedPieces))) = ({}));
((((dom(((internalPos) <+ (({((pp) |-> (nn))}))))) /\ (lockedPieces))) = ({}));
((((((dom(((({pp})) <<| (externalPos)))) \/ (dom(((internalPos) <+ (({((pp) |-> (nn))}))))))) \/ (lockedPieces))) = (PIECES));
(card(((((({pp})) <<| (externalPos))) |> (({nn$1})))) <= 2);
(card(((((((({pp})) <<| (externalPos)))~) ; (colorOf)) )[({nn$1})]) <= 1);
((lockedPieces) : (POW(PIECES)));
((externalPos) : (((PIECES) +-> (((0) .. ((numExternal - 1)))))));
((internalPos) : (((PIECES) +-> (((0) .. ((numInternal - 1)))))));
((((dom(externalPos)) /\ (dom(internalPos)))) = ({}));
((((dom(externalPos)) /\ (lockedPieces))) = ({}));
((((dom(internalPos)) /\ (lockedPieces))) = ({}));
((((((dom(externalPos)) \/ (dom(internalPos)))) \/ (lockedPieces))) = (PIECES));
(card(((externalPos) |> (({nn})))) <= 2);
"Invariant is well defined";
((((externalPos) |> (({nn})))) : (FIN(((externalPos) |> (({nn}))))));
((((((externalPos)~) ; (colorOf)) )[({nn})]) : (FIN(((((externalPos)~) ; (colorOf)) )[({nn})])));
"Operation precondition is well defined";
((pp) : (dom(colorOf)));
((colorOf) : (((dom(colorOf)) +-> (ran(colorOf)))));
(((colorOf )(pp)) : (dom(startPoint)));
((startPoint) : (((dom(startPoint)) +-> (ran(startPoint)))));
((((externalPos) |> (({(startPoint )((colorOf )(pp))})))) : (FIN(((externalPos) |> (({(startPoint )((colorOf )(pp))}))))));
"Operation is well defined";
((pp) : (dom(externalPos)));
not(((pp) : (dom(externalPos))));
((pp) : (dom(internalPos)));
((externalPos) : (((dom(externalPos)) +-> (ran(externalPos)))));
((internalPos) : (((dom(internalPos)) +-> (ran(internalPos)))))
END
&
THEORY EnumerateX
END
